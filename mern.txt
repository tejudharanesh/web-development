1) what is MERN stack
        MERN Stack is a Javascript Stack that is used for easier
        and faster deployment of full-stack web applications.
        MERN Stack comprises of 4 technologies namely: 

        MongoDB Express React and Node.js

        The MERN architecture allows you to easily construct a
        3-tier architecture (frontend, backend, database)
        entirely using JavaScript and JSON.

        Using these four technologies you can
        create absolutely any application that you can think of
        everything that exists in this world today.

        MongoDB: Non Relational Database
        Express: Node.js web server
        React: JavaScript Frontend Framework
        Node: JavaScript Web Server


How MERN stack works?
When working with MERN stack, developers create implement View layer 
using React and Express and Node are used to implement application layer
of website then MongoDB is used to implement database layer



MongoDB: Cross-platform Document-Oriented Database 
    MongoDB is a NoSQL database where each record is a document comprising 
    of key-value pairs that are similar to JSON (JavaScript Object Notation)
    objects. MongoDB is flexible and allows its users to create schema, databases, 
    tables, etc. Documents that are identifiable by a primary key make up the basic 
    unit of MongoDB. Once MongoDB is installed, users can make use of Mongo shell as 
    well. Mongo shell provides a JavaScript interface through which the users can interact 
    and carry out operations (eg: querying, updating records, deleting records).

Why use MongoDB? 
    1) Fast – Being a document-oriented database, easy to index documents. Therefore a faster response.
    2) Scalability – Large data can be handled by dividing it into several machines.
    3) Use of JavaScript – MongoDB uses JavaScript which is the biggest advantage.
    4) Schema Less – Any type of data in a separate document.
    5) Data stored in the form of JSON – Objects, Object Members, Arrays, Values, and Strings
    6) JSON has a wide range of browser compatibility.
    7) Sharing Data: Data of any size and type(video, audio) can be shared easily.
    8) Flexible Document Model – MongoDB supports document-model(tables, schemas, columns & SQL) which is faster and easier.


Express: Back-End Framework:
    Express is a Node.js framework. Rather than writing the code using Node.js and creating 
    loads of Node modules, Express makes it simpler and easier to write the back-end code.
    Express helps in designing great web applications and APIs. Express supports many 
    middlewares which makes the code shorter and easier to write.

Why use Express? 
    1) Asynchronous and Single-threaded.
    2) Efficient, fast & scalable
    3) Has the biggest community for Node.js
    4) Express promotes code reusability with its built-in router.
    5) Robust API


React: Front-End Library
    React is a JavaScript library that is used for building user interfaces. 
    React is used for the development of single-page applications and mobile applications 
    because of its ability to handle rapidly changing data. 
    React allows users to code in JavaScript and create UI components. 


Why use React? 
    1) Virtual DOM – A virtual DOM object is a representation of a DOM object. 
    Virtual DOM is actually a copy of the original DOM. 
    Any modification in the web application causes the entire UI to re-render the 
    virtual DOM. Then the difference between the original DOM and this virtual DOM 
    is compared and the changes are made accordingly to the original DOM.

    2) JSX – Stands for JavaScript XML. It is an HTML/XML JavaScript Extension which is 
    used in React. Makes it easier and simpler to write React components.

    3) Components – ReactJS supports Components. Components are the building blocks of UI
    wherein each component has a logic and contributes to the overall UI. 
    These components also promote code reusability and make the overall web application
    easier to understand.

    4) High Performance – Features like Virtual DOM, JSX and Components makes it much 
    faster than the rest of the frameworks out there.

    5) Developing Android/Ios Apps – With React Native you can easily code Android-based
    or IOS-Based apps with just the knowledge of JavaScript and ReactJS.


Node.js: JS Runtime Environment 
    Node.js provides a JavaScript Environment which allows the user to run their code 
    on the server (outside the browser). Node pack manager i.e. npm allows the user to 
    choose from thousands of free packages (node modules) to download.

Why use Node.JS? 
    1) Open-source JavaScript Runtime Environment
    2) Single threading – Follows a single-threaded model.
    3) Data Streaming
    4) Fast – Built on Google Chrome’s JavaScript Engine, Node.js has a fast code 
    execution ND Highly Scalable